

apiVersion: v1
kind: DeploymentConfig
metadata:
  generation: 1
  labels:
    app: ruby-helloworld
  name: ruby-helloworld
spec:
  replicas: 1
  selector:
    deploymentconfig: ruby-helloworld
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: ruby-helloworld
        deploymentconfig: ruby-helloworld
    spec:
      containers:
      - image: docker.io/mangirdas/ocp-ruby-helloworld:latest
        imagePullPolicy: Always
        name: ruby-helloworld
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ruby-helloworld
  name: ruby-helloworld
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deploymentconfig: ruby-helloworld
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Route
metadata:
  labels:
    app: ruby-helloworld
  name: ruby-helloworld
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: ruby-helloworld
    weight: 100
  wildcardPolicy: None